name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2
        run: |
          ssh -T -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail

            cd ~/app || mkdir -p ~/app && cd ~/app

            # Clean workspace
            rm -rf ./* .[!.]* || true

            # Fetch fresh copy
            git clone --depth 1 https://github.com/SujalKrG/demoAuthEva.git temp
            cp -a temp/. .
            rm -rf temp
            rm -rf .git || true

            # Ensure node & npm exist
            if ! command -v node >/dev/null 2>&1; then
              echo "ERROR: node not found on remote. Install Node.js first."
              exit 1
            fi

            # Ensure pm2 is installed
            if ! command -v pm2 >/dev/null 2>&1; then
              npm install -g pm2
            fi

            # Install dependencies
            npm install

            # Export environment variables
            export NODE_ENV=production
            export PORT=8080

            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASS="${{ secrets.DB_PASS }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_PORT="${{ secrets.DB_PORT }}"

            export DB2_HOST="${{ secrets.DB2_HOST }}"
            export DB2_PORT="${{ secrets.DB2_PORT }}"
            export DB2_DATABASE="${{ secrets.DB2_DATABASE }}"
            export DB2_USERNAME="${{ secrets.DB2_USERNAME }}"
            export DB2_PASSWORD="${{ secrets.DB2_PASSWORD }}"

            export REDIS_HOST="${{ secrets.REDIS_HOST }}"
            export REDIS_PORT="${{ secrets.REDIS_PORT }}"

            export AWS_BUCKET="${{ secrets.AWS_BUCKET }}"
            export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
            export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            export AWS_REGION="${{ secrets.AWS_REGION }}"

            # Start Redis in passless mode if not running
            if ! pgrep redis-server > /dev/null; then
              redis-server --daemonize yes
            fi
            sleep 2

            # Stop & delete existing PM2 apps
            pm2 delete all || true

            # Start all PM2 apps
            pm2 start server.js --name myapp --update-env
            pm2 start jobs/workers/videoUploadWorker.js --name video-worker --update-env
            pm2 start jobs/workers/imageUploadWorker.js --name image-worker --update-env

            # Save PM2 process list
            pm2 save

            # Show PM2 status
            pm2 list
            pm2 status
          EOF
