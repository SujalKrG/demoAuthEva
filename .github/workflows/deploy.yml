name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2
        run: |
          ssh -T -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            cd ~/app || mkdir -p ~/app && cd ~/app

            # Clean and fetch fresh code
            rm -rf * .[!.]* || true
            git clone --depth 1 https://github.com/SujalKrG/demoAuthEva.git temp
            # copy including hidden files
            cp -a temp/. .
            rm -rf temp
            # remove .git so server isn't a git repo (optional)
            rm -rf .git || true
            

            # Install dependencies (include dev deps since migrations/seeders often need them)
            npm install 

            # Export secrets into this remote session (do NOT echo secret values)
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASS="${{ secrets.DB_PASS }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            # also export common alternate names in case config expects them
            export DB_USERNAME="${{ secrets.DB_USER }}"
            export DB_PASSWORD="${{ secrets.DB_PASS }}"
            # export DB_DIALECT="${{ secrets.DB_DIALECT }}" || true
            export NODE_ENV=production

            # Verify required variables are present (fail early with helpful messages)
            if [ -z "$DB_HOST" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASS" ] || [ -z "$DB_NAME" ]; then
              echo "ERROR: Missing DB env vars. Aborting deploy."
              echo "DB_HOST empty? $([ -z \"$DB_HOST\" ] && echo yes || echo no)"
              echo "DB_USER empty? $([ -z \"$DB_USER\" ] && echo yes || echo no)"
              echo "DB_PASS empty? $([ -z \"$DB_PASS\" ] && echo yes || echo no)"
              echo "DB_NAME empty? $([ -z \"$DB_NAME\" ] && echo yes || echo no)"
              exit 1
            fi

            echo "DB envs appear set. Running migrations & seeders..."

            # Ensure the npm scripts exist: migrate:run and seed:run (or migrate-and-seed)
            # Run migration and seeding (this should be defined in package.json)
            npm run migrate-and-seed || { echo "Migration/Seeding failed"; exit 1; }

            # Restart application with pm2 (ensure server.js is your app entry)
            pm2 stop my-backend || true
            pm2 start server.js --name my-backend
          EOF
