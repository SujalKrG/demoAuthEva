name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to EC2
        run: |
          ssh -T -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail

            # Navigate to app directory or create it
            mkdir -p ~/app
            cd ~/app

            # Backup old code (optional, safe)
            if [ -d backup ]; then rm -rf backup; fi
            mkdir backup
            cp -a ./* backup/ 2>/dev/null || true

            # Clean workspace but keep .pm2, uploads, logs safe
            find . -maxdepth 1 ! -name '.' ! -name 'server.js' ! -name 'node_modules' ! -name '.pm2' ! -name 'uploads' -exec rm -rf {} +

            # Fetch fresh copy
            git clone --depth 1 https://github.com/SujalKrG/demoAuthEva.git temp
            cp -a temp/. .
            rm -rf temp
            rm -rf .git || true

            # Ensure Node.js exists
            if ! command -v node >/dev/null 2>&1; then
              echo "ERROR: Node.js not found. Install Node.js first."
              exit 1
            fi

            # Ensure PM2 exists
            if ! command -v pm2 >/dev/null 2>&1; then
              npm install -g pm2
            fi

            # Install dependencies
            npm ci --production

            # Export DB and app env variables
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASS="${{ secrets.DB_PASS }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export NODE_ENV=production
            export PORT=8080

            # Compatibility aliases
            export DB_USERNAME="$DB_USER"
            export DB_PASSWORD="$DB_PASS"

            # Validate env vars
            if [ -z "$DB_HOST" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASS" ] || [ -z "$DB_NAME" ]; then
              echo "ERROR: Missing DB env vars. Aborting deploy."
              exit 1
            fi

            # Optional: migrations/seeders
            # npm run migrate:run || true
            # npm run seed:run || true

            # Restart PM2 process safely
            pm2 stop myapp || true
            pm2 delete myapp || true
            pm2 start server.js --name myapp --update-env

            # Save PM2 process for auto-start on reboot
            pm2 save
            pm2 startup systemd -u $USER --hp $HOME || true

            # Show PM2 status
            pm2 status
          EOF
